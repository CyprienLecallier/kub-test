apiVersion: v1
kind: Service
metadata:
  name: mysvc
spec:
  type: NodePort
  selector:
    app: myapp
  ports:
  - protocol: TCP
    targetPort: 80
    port: 8080
    nodePort: 30000

---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: mypv
spec:
  storageClassName: file
  capacity:
    storage: 10M
  accessModes:
  - ReadWriteMany
  nfs:
    server: 192.168.57.50
    path: /srv/exports

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: mypvc
spec:
  storageClassName: file
  resources:
    requests:
      storage: 10M
  accessModes:
  - ReadWriteMany

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: path
data:
  FILE: /data/index.html

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: flask-deploy
spec:
  replicas: 1
  selector:
    matchLabels:
        app: myapp
  template:
    metadata:
      labels:
        app: myapp
    spec:
      containers:
      - name: flask
        image: docker.io/cyprienlecallier/flask_mini
        command:
          - /app/server.py
        ports:
        - containerPort: 5000
        volumeMounts:
        - name: data
          mountPath: /data/
        envFrom:
        - configMapRef:
            name: path

      - name: nginx
        image: nginx
        ports:
        - containerPort: 80
        volumeMounts:
        - mountPath: /etc/nginx/conf.d
          name: nginx-conf

      volumes:
      - name: nginx-conf
        configMap:
          name: nginx.conf
      - name: data
        persistentVolumeClaim:
          claimName: mypvc
