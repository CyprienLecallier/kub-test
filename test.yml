apiVersion: v1
kind: Service
metadata:
  name: mysvc
spec:
  type: NodePort
  selector:
    app: frontend
  ports:
  - protocol: TCP
    port: 8080
    targetPort: 80

---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: mypv
spec:
  storageClassName: manual2
  capacity:
    storage: 10M
  accessModes: 
  - ReadWriteMany
  nfs:
    server: 192.168.57.50
    path: /srv/exports

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: mypvc
spec:
  storageClassName: manual2
  accessModes:
  - ReadWriteMany
  resources:
    requests:
      storage: 10M

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: nginx-deploy
spec:
  replicas: 1
  selector:
    matchLabels:
      app: frontend
  template:
    metadata:
      labels:
        app: frontend
    spec:
      containers:
      - name: mynginx
        image: nginx
        ports:
        - containerPort: 80
        volumeMounts:
        - mountPath: /usr/share/nginx/html
          name: myvolume
        resources:
          requests:
            cpu: 10m
        livenessProbe:
          exec:
            command:
              - cat
              - /usr/share/nginx/html/index.html
          initialDelaySeconds: 10
          periodSeconds: 5
          #failureThreshold: 3
        readinessProbe:
          exec:
            command:
              - cat
              - /usr/share/nginx/html/index.html
          initialDelaySeconds: 10
          periodSeconds: 5
          #failureThreshold: 3
      volumes:
      - name: myvolume
        persistentVolumeClaim:
          claimName: mypvc

---
apiVersion: autoscaling/v1
kind: HorizontalPodAutoscaler
metadata:
  name: myhpa
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: nginx-deploy
  minReplicas: 3
  maxReplicas: 7
  targetCPUUtilizationPercentage: 10
